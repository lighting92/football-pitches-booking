@model List<FootballPitchesBooking.Models.Notification>
@{
    ViewBag.Title = "Nhắc nhở";
    Layout = "~/Views/Shared/_StadiumStaffLayout.cshtml";
}

<h1>Nhắc nhở từ hệ thống</h1>
<form id="notform" action="/StadiumStaff/UpdateNotificationsStatus" method="post">
    <p style="text-align: right">
        <button style="margin-bottom: 5px;" onclick="submitform('unread')" type="button" class="btn-medium btn-success">Đánh dấu chưa đọc</button>
        <button style="margin-bottom: 5px;" onclick="submitform('read')" type="button" class="btn-medium btn-success">Đánh dấu đã đọc</button>
        <button style="margin-bottom: 5px;" onclick="submitform('delete')" type="button" class="btn-medium btn-short btn-danger">Xóa</button>
    </p>
    <p style="text-align: right">
        <button class="btn-auto" type="button" onclick="selectall()">Chọn tất cả</button>
        <button class="btn-auto" type="button" onclick="deselectall()">Bỏ chọn tất cả</button>
    </p>
    @if (!string.IsNullOrEmpty((string)TempData["Error"]))
    {
        <div class="alert alert-danger">
            @TempData["Error"]
        </div>
    }
    <table id="nottable" class="table table-condensed table-bordered table-hover">
        <thead>
            <tr>
                <th>Ngày</th>
                <th>Lúc</th>
                <th>Sân</th>
                <th class="long">Nội dung</th>
                <th>Trạng thái</th>
                <th>Đánh dấu</th>
            </tr>
            <tr>
                <th style="text-align: center">Ngày</th>
                <th style="text-align: center">Lúc</th>
                <th style="text-align: center">Sân</th>
                <th style="text-align: center">Nội dung</th>
                <th style="text-align: center">Trạng thái</th>
                <th style="text-align: center">Đánh dấu</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model)
            {
                <tr id="row_@item.Id">
                    <td>
                        @item.CreateDate.Date.ToShortDateString()
                    </td>
                    <td>
                        @item.CreateDate.ToShortTimeString()
                    </td>
                    <td>@item.Stadium.Name</td>
                    <td>
                        @Html.Raw(item.Message)
                    </td>

                    @if (item.Status.ToLower().Equals("unread"))
                    {
                        <td>
                            Chưa đọc</td>
                        
                    }
                    else
                    {
                        <td>
                            Đã đọc</td>
                    }
                    <td style="text-align: center">
                        <label style="display: none">Không</label>
                        <input type="checkbox" data-nid="@item.Id" onchange="checkbox(this)" value="@item.Id"/>
                    </td>
                </tr>
            }
        </tbody>
        <tfoot>
            <tr>
                <th style="text-align: center">Ngày</th>
                <th style="text-align: center">Lúc</th>
                <th style="text-align: center">Nội dung</th>
                <th style="text-align: center">Đã đọc</th>
                <th style="text-align: center">Đánh dấu</th>
            </tr>
        </tfoot>
    </table>
</form>
<script type="text/javascript">
    function selectall() {
        var table = $("#nottable").dataTable();
        var checks = jQuery("#nottable input[type='checkbox']");
        jQuery.each(checks, function (index, obj) {
            jQuery(obj).attr("checked", "checked");
            jQuery(obj).attr("name", "ids[]");
            jQuery(obj).parent().find("label").html("Chọn");
            table.fnUpdate($(obj).parent().html(), $("tr#row_" + obj.value)[0], 4, false, false);
        });
    }

    function deselectall() {
        var table = $("#nottable").dataTable();
        var checks = jQuery("#nottable input[type='checkbox']");
        jQuery.each(checks, function (index, obj) {
            jQuery(obj).removeAttr("checked");
            jQuery(obj).removeAttr("name");
            jQuery(obj).parent().find("label").html("Không");
            table.fnUpdate($(obj).parent().html(), $("tr#row_" + obj.value)[0], 4, false, false);
        });
    }

    function checkbox(control) {
        var table = $("#nottable").dataTable();
        var id = jQuery(control).data("nid");
        control.name = "ids[]";
        if (!control.checked) {
            control.removeAttribute("name");
            jQuery(control).removeAttr("checked");
            jQuery(control).parent().find("label").html("Không");
        }
        else {
            jQuery(control).attr("checked", "checked");
            jQuery(control).parent().find("label").html("Chọn");
        }
        table.fnUpdate($(control).parent().html(), $("tr#row_" + control.value)[0], 4, false, false);
    }

    function submitform(action) {
        var el = document.createElement("input");
        el.name = "action";
        el.value = action;
        if (action == "delete") {
            var yes = confirm("Bạn có thực sự muốn xóa những thông báo đã chọn không?");
            if (!yes) {
                return false;
            }
        }
        var notform = document.getElementById("notform");
        notform.appendChild(el);
        notform.submit();
    }

    $(document).ready(function () {
        $('table').dataTable({
            "aaSorting": []
        }).columnFilter({
            sPlaceHolder: "head:before",
            aoColumns: [
                { type: "date-range" },
                { type: "text" },
                { type: "text" },
                { type: "text" },
                { type: "select", values: ['Đã đọc', 'Chưa đọc'] },
                { type: "select", values: ['Chọn', 'Không'] }
            ]
        });
    });
</script>
